SELECT *
FROM Products;



--SELECT COLUMNS
SELECT product_name,   
       product_brand,
       unit_price
FROM Products;


--With calculation
SELECT product_name,
       product_brand, 
       unit_price *1.1
FROM Products;


--AS
SELECT product_name, product_brand, unit_price,
       unit_price *1.1 AS New_unit_price, 
       ((unit_price *1.1) - unit_price) AS price_diff
FROM Products;

--DISTINCT
SELECT DISTINCT product_brand
FROM Products;


--WHERE
SELECT *
FROM Products
WHERE quantity_in_stock <= 15;

SELECT *
FROM Products
WHERE product_name = 'Shampoo';


--WHERE _ %
SELECT *
FROM Products
WHERE product_name LIKE 'S%';


SELECT *
FROM Products
WHERE product_name LIKE 'p___';

SELECT *
FROM Products
WHERE size_or_quantity LIKE 'p_%';


--WHERE IS NULL, IS NOT NULL
SELECT *
FROM Products
WHERE product_brand IS NULL;


SELECT *
FROM Products
WHERE product_brand IS NOT NULL;


--WHERE BETWEEN
SELECT *
FROM Products
WHERE unit_price BETWEEN 1 AND 2;


--WHERE AND
SELECT *
FROM Products
WHERE unit_price < 2.5
AND quantity_in_stock < 30;


--WHERE OR
SELECT *
FROM Products
WHERE unit_price > 2.5
OR quantity_in_stock < 15;

--WHERE IN
SELECT *
FROM Products
WHERE category_id IN (1,3);

--WHERe NOT IN
SELECT *
FROM Products
WHERE category_id NOT IN (1,3);



--ORDER BY
SELECT product_name, product_brand, unit_price
FROM Products
ORDER BY unit_price;


SELECT product_name, product_brand, unit_price
FROM Products
ORDER BY unit_price, product_name DESC;


--LIMIT
SELECT product_name, product_brand, unit_price
FROM Products
ORDER BY unit_price DESC
LIMIT 5;


SELECT *
FROM Products
WHERE category_id = 3
ORDER BY unit_price DESC
LIMIT 3;


--LIMIT OFFSET

SELECT product_name, product_brand, unit_price
FROM Products
ORDER BY unit_price DESC
LIMIT 5 OFFSET 3;


--WHERE CASE
SELECT product_name, product_brand, unit_price, category_id,
CASE
WHEN unit_price >= 3 AND category_id = 1 THEN 'Expensive items - Groceries'
WHEN unit_price >= 2 AND category_id = 2 THEN 'Affordable items - Toiletries'
WHEN unit_price >= 1 AND category_id = 3 THEN 'Affordable items - Stationery'
WHEN unit_price <= 1 THEN 'Low Price'
ELSE 'Other'
END AS Category_price
FROM Products;